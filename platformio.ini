; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:wemos_d1_mini32_serial]
platform = espressif32
framework = arduino
board = wemos_d1_mini32
board_build.mcu = esp32
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
build_flags = -D TARGET_ESP32
monitor_speed = 115200
upload_speed = 2000000
board_build.partitions = partitions_custom.csv
lib_deps = 
	ArduinoOTA @ ^1.0
	ESPmDNS @ ^1.0
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	ottowinter/AsyncTCP-esphome@^1.1.1
	bblanchon/ArduinoJson@^6.16.1
	pfeerick/elapsedMillis@^1.0.6
	sandeepmistry/CAN@^0.3.1

[env:wemos_d1_mini32_wifi]
platform = espressif32
framework = arduino
board = wemos_d1_mini32
board_build.mcu = esp32
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
build_flags = -D TARGET_ESP32
monitor_speed = 115200
upload_protocol = espota
upload_port = fiorino.local
upload_flags = 
	--auth=3VLS042020
board_build.partitions = partitions_custom.csv
lib_deps = 
	ArduinoOTA @ ^1.0
	ESPmDNS @ ^1.0
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	ottowinter/AsyncTCP-esphome@^1.1.1
	bblanchon/ArduinoJson@^6.16.1
	pfeerick/elapsedMillis@^1.0.6
	sandeepmistry/CAN@^0.3.1

[env:ttgo_t7_mini32]
platform = espressif32
framework = arduino
board = ttgo-t7-v14-mini32
board_build.mcu = esp32
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
build_flags = -D TARGET_ESP32
monitor_speed = 115200
upload_flags = 
board_build.partitions = partitions_custom.csv
lib_deps = 
	ArduinoOTA @ ^1.0
	ESPmDNS @ ^1.0
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	ottowinter/AsyncTCP-esphome@^1.1.1
	bblanchon/ArduinoJson@^6.16.1
	pfeerick/elapsedMillis@^1.0.6
	sandeepmistry/CAN@^0.3.1

[platformio]
description = Reads data from BMS through RS-232 and controls charger profile accordingly. Data can be viewed on webserver via Wifi Acces Point or Station.
