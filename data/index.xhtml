<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//w3c//dtd xhtml 1.0 strict//en" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<title>
		Fiorino
	</title>

	<script src="pureknob.js" type="text/javascript"></script>
	<script type="text/javascript">
		// <![CDATA[

		var soc;

		function gauges() {
			// Create knob element, 300 x 300 px in size.
			const socGauge = pureknob.createKnob(300, 300);
			const speedGauge = pureknob.createKnob(300, 300);

			// Set properties.
			socGauge.setProperty('angleStart', -0.75 * Math.PI);
			socGauge.setProperty('angleEnd', 0.75 * Math.PI);
			socGauge.setProperty('colorFG', '#2ecc71');
			socGauge.setProperty('colorBG', '#212121');
			socGauge.setProperty('colorLabel', '#2ecc71');
			socGauge.setProperty('trackWidth', 0.3);
			socGauge.setProperty('valMin', 0);
			socGauge.setProperty('valMax', 100);
			socGauge.setProperty('textScale', '0.8');
			socGauge.setProperty('label', 'SOC');
			//socGauge.setProperty('readonly', 'true');
			socGauge.setProperty('fnValueToString', function (value) {
				let string = value.toString();
				let n = string.length;

				/*
				 * If value is just a single digit, add leading zero.
				 */
				if (n < 2) {
					string = '0' + string;
					n += 1;
				}

				const prefix = string.slice(0, n - 1);
				const suffix = string.slice(n - 1, n);
				const result = prefix + suffix + ' %';
				return result;
			});

			socGauge.setValue(84);

			speedGauge.setProperty('angleStart', -0.75 * Math.PI);
			speedGauge.setProperty('angleEnd', 0.75 * Math.PI);
			speedGauge.setProperty('colorFG', '#e67e22');
			speedGauge.setProperty('colorBG', '#212121');
			speedGauge.setProperty('colorLabel', '#e67e22');
			speedGauge.setProperty('trackWidth', 0.3);
			speedGauge.setProperty('valMin', 0);
			speedGauge.setProperty('valMax', 90);
			speedGauge.setProperty('textScale', '0.72');
			speedGauge.setProperty('label', 'Power');
			speedGauge.setProperty('needle', "true");
			speedGauge.setProperty('fnValueToString', function (value) {
				let string = value.toString();
				let n = string.length;

				/*
				 * If value is just a single digit, add leading zero.
				 */
				if (n < 2) {
					string = '0' + string;
					n += 1;
				}

				const prefix = string.slice(0, n - 1);
				const suffix = string.slice(n - 1, n);
				const result = prefix + '.' + suffix + ' kW';
				return result;
			});

			const socListener = function (socGauge, value) {
				console.log(value);
			};
			const speedListener = function (speedGauge, value) {
				console.log(value);
			};

			socGauge.addListener(socListener);
			speedGauge.addListener(speedListener);

			// Create element node.
			const socNode = socGauge.node();
			const speedNode = speedGauge.node();

			// Add it to the DOM.
			const socElem = document.getElementById('socElement');
			socElem.appendChild(socNode);

			const speedElem = document.getElementById('speedElement');
			speedElem.appendChild(speedNode);
		}

		function ready() {
			gauges();

		}

		document.addEventListener('DOMContentLoaded', ready, false);
			// ]]>
	</script>
</head>

<body style="background-color: #34495e">
	<style>
		.parent {
			display: flex;
			width: 100%;
		}
		.child {
			margin: auto;
			width: 100%;
		}

		.button {
			background-color: #2ecc71;
			border-radius: 10px;
			border: 1px solid #27ae60;
			display: inline-block;
			cursor: pointer;
			color: #212121;
			font-family: Arial;
			font-size: 17px;
			padding: 16px 31px;
			text-decoration: none;
			margin-left: 25px;
		}

		.button:hover {
			background-color: #27ae60;
		}

		.button:active {
			position: relative;
			top: 1px;
		}

		.spacer {
			height: 40px;
		}

		.knob {
			margin-top: auto;
			margin-left: auto;
			margin-right: auto;
		}

		.textstyle {
			font-family: Arial;
			font-size: 17px;
			color: #95a5a6;
			margin-left: 25px;
		}

		.display {
			background-color: #bdc3c7;
			border-radius: 10px;
			border: 4px solid #212121;
			display: inline-block;
			cursor: pointer;
			color: #212121;
			font-family: Arial;
			font-size: 17px;
			padding: 16px 31px;
			text-decoration: none;
			margin-left: 25px;
			margin-right: 25px;
		}

		.container {
			text-align: center;
			float: left;
		}

		.textblock {
			display: inline-block;
			text-align: center;
		}

		.textblock>.display {
			display: block;
		}
	</style>
 
	<div class="parent">
		<div id="socElement" class="knob"> </div>
		<div id="speedElement" class="knob"> </div>
		<div class="spacer"></div>
	</div>

	<div class="parent">
		<div>
			<p class="textstyle">Vmin</p>
			<span class="display" id="Vmin">0.00</span>
		</div>

		<div>
			<p class="textstyle">Vmax</p>
			<span class="display" id="Vmax">0.00</span>
		</div>
		<div>
			<p class="textstyle">Vavg</p>
			<span class="display" id="Vavg">0.00</span>
		</div>


	</div>

	<div class="spacer"></div>

	<p class="textstyle">
		Manage Firmware
	</p>

	<div>
		<span class="button" id="parameters">Parameters</span>
		<span class="button" id="upload">Upload</span>
		<span class="button" id="parameters">Wifi Settings</span>
	</div>


</body>

</html>